{"ast":null,"code":"var _jsxFileName = \"/home/user/django/da/react-y/src/Todo/TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  input: {\n    marginRight: '1rem'\n  }\n};\n\nconst TodoItem = ({\n  index,\n  todo,\n  onChange\n}) => {\n  _s();\n\n  const {\n    removeTodo\n  } = useContext(Context);\n  const classes = [];\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [todo]);\n\n  if (todo.completed) {\n    classes.push('done');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"listyles\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.join(' '),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        style: styles.input,\n        onChange: () => onChange(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: ++index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), \"\\xA0\", todo.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"rmbtn\",\n      className: \"rm\",\n      onClick: () => removeTodo(todo.id),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"uY0nGJwrRISnQl+ObG9wHdcj6OQ=\");\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n};\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/user/django/da/react-y/src/Todo/TodoItem.jsx"],"names":["React","useContext","PropTypes","Context","styles","input","marginRight","TodoItem","index","todo","onChange","removeTodo","classes","useEffect","effect","cleanup","completed","push","join","id","title","propTypes","object","isRequired","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,MAAM,GAAG;AACVC,EAAAA,KAAK,EAAE;AACJC,IAAAA,WAAW,EAAE;AADT;AADG,CAAf;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,UAAU,CAACE,OAAD,CAAjC;AACA,QAAMS,OAAO,GAAG,EAAhB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM;AACN,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACN,IAAD,CALM,CAAT;;AAOA,MAAIA,IAAI,CAACO,SAAT,EAAoB;AAChBJ,IAAAA,OAAO,CAACK,IAAR,CAAa,MAAb;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAG,UAAhB;AAAA,4BACG;AAAM,MAAA,SAAS,EAAIL,OAAO,CAACM,IAAR,CAAa,GAAb,CAAnB;AAAA,8BACC;AAAO,QAAA,IAAI,EAAG,UAAd;AACQ,QAAA,OAAO,EAAIT,IAAI,CAACO,SADxB;AAEQ,QAAA,KAAK,EAAIZ,MAAM,CAACC,KAFxB;AAGQ,QAAA,QAAQ,EAAI,MAAMK,QAAQ,CAACD,IAAI,CAACU,EAAN;AAHlC;AAAA;AAAA;AAAA;AAAA,cADD,eAKK;AAAA,kBAAS,EAAEX;AAAX;AAAA;AAAA;AAAA;AAAA,cALL,UAOMC,IAAI,CAACW,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAUI;AAAQ,MAAA,EAAE,EAAG,OAAb;AAAqB,MAAA,SAAS,EAAG,IAAjC;AAAsC,MAAA,OAAO,EAAI,MAAMT,UAAU,CAACF,IAAI,CAACU,EAAN,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMZ,Q;;KAAAA,Q;AAiCNA,QAAQ,CAACc,SAAT,GAAqB;AACjBZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADN;AAEjBf,EAAAA,KAAK,EAACN,SAAS,CAACsB,MAFC;AAGjBd,EAAAA,QAAQ,EAACR,SAAS,CAACuB,IAAV,CAAeF;AAHP,CAArB;AAMA,eAAehB,QAAf","sourcesContent":["import React, {useContext} from 'react';\nimport PropTypes from 'prop-types'\nimport Context from '../context';\n\nconst styles = {\n     input: {\n        marginRight: '1rem'\n    }\n};\n\nconst TodoItem = ({ index, todo, onChange}) => {\n    const { removeTodo } = useContext(Context);\n    const classes = [];\n\n    useEffect(() => {\n        effect\n        return () => {\n            cleanup\n        }\n    }, [todo])\n\n    if (todo.completed) {\n        classes.push('done');\n    }\n\n    return (\n        <li className = 'listyles'>\n           <span className = {classes.join(' ')}> \n            <input type = 'checkbox'\n                    checked = {todo.completed}\n                    style = {styles.input} \n                    onChange = {() => onChange(todo.id)} />  \n                <strong>{++index}</strong>\n                &nbsp;\n                {todo.title}\n            </span>\n            <button id = 'rmbtn' className = 'rm' onClick = {() => removeTodo(todo.id)}>&times;</button>\n        </li>\n    )\n\n    \n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    index:PropTypes.number,\n    onChange:PropTypes.func.isRequired,\n}\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}
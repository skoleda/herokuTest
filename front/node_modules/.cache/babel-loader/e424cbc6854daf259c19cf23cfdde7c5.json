{"ast":null,"code":"var _jsxFileName = \"/home/user/proj/proj_react/react-youtube/src/Todo/TodoItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  li: {\n    displey: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '.5rem 1rem',\n    border: '1px solid #ccc',\n    borderRedius: '1px',\n    marginBottom: '.5rem'\n  },\n  input: {\n    marginRight: '1rem'\n  }\n};\n\nfunction TodoItem({\n  todo,\n  index,\n  onChange\n}) {\n  const classes = [];\n\n  if (todo.completed) {}\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: styles.li,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        style: styles.input,\n        onChange: () => onChange(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: ++index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \"\\xA0\", todo.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rm\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n};\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/user/proj/proj_react/react-youtube/src/Todo/TodoItem.js"],"names":["React","PropTypes","styles","li","displey","justifyContent","alignItems","padding","border","borderRedius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","classes","completed","id","title","propTypes","object","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,EAAE,EAAC;AACCC,IAAAA,OAAO,EAAC,MADT;AAECC,IAAAA,cAAc,EAAC,eAFhB;AAGCC,IAAAA,UAAU,EAAC,QAHZ;AAICC,IAAAA,OAAO,EAAC,YAJT;AAKCC,IAAAA,MAAM,EAAE,gBALT;AAMCC,IAAAA,YAAY,EAAE,KANf;AAOCC,IAAAA,YAAY,EAAE;AAPf,GADQ;AAUXC,EAAAA,KAAK,EAAC;AACFC,IAAAA,WAAW,EAAE;AADX;AAVK,CAAf;;AAiBC,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAlB,EAA0C;AACvC,QAAMC,OAAO,GAAG,EAAhB;;AAEA,MAAGH,IAAI,CAACI,SAAR,EAAkB,CAGjB;;AAED,sBACI;AAAI,IAAA,KAAK,EAAEhB,MAAM,CAACC,EAAlB;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACA,QAAA,KAAK,EAAED,MAAM,CAACS,KADd;AAEA,QAAA,QAAQ,EAAE,MAAMK,QAAQ,CAACF,IAAI,CAACK,EAAN;AAFxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBAAS,EAAEJ;AAAX;AAAA;AAAA;AAAA;AAAA,cAJJ,UAMKD,IAAI,CAACM,KANV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAQ,MAAA,SAAS,EAAG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;KAvBSP,Q;AAyBVA,QAAQ,CAACQ,SAAT,GAAqB;AACjBP,EAAAA,IAAI,EAAEb,SAAS,CAACqB,MAAV,CAAiBC,UADN;AAEjBR,EAAAA,KAAK,EAACd,SAAS,CAACuB,MAFC;AAGjBR,EAAAA,QAAQ,EAACf,SAAS,CAACwB,IAAV,CAAeF;AAHP,CAArB;AAMA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst styles = {\n    li:{\n        displey:'flex',\n        justifyContent:'space-between',\n        alignItems:'center',\n        padding:'.5rem 1rem',\n        border: '1px solid #ccc',\n        borderRedius: '1px',\n        marginBottom: '.5rem',\n    },\n    input:{\n        marginRight: '1rem'\n    }\n\n}\n\n\n function TodoItem({todo, index, onChange}){\n    const classes = []\n\n    if(todo.completed){\n\n\n    }\n\n    return (\n        <li style={styles.li}>\n            <span>\n                <input type='checkbox'\n                style={styles.input} \n                onChange={() => onChange(todo.id)} />            \n                <strong>{++index}</strong>\n                &nbsp;\n                {todo.title}\n            </span>\n            <button className = 'rm' >&times;</button>\n        </li>\n    )\n\n    \n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    index:PropTypes.number,\n    onChange:PropTypes.func.isRequired,\n}\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}
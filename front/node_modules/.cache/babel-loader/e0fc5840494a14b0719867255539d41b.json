{"ast":null,"code":"var _jsxFileName = \"/home/user/proj/proj_react/react-youtube/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let copTodos = [];\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  copTodos = [...todos];\n  useEffect(() => {\n    if (localStorage.length > 0) {\n      let locArr = JSON.parse(localStorage.getItem('key'));\n      let arr = [...locArr];\n      setTodos(arr);\n    }\n  }, []);\n  useEffect(() => {//console.log(todos);\n  }, [todos]);\n\n  const toggleTodo = id => {\n    let localArr = [...todos];\n    let a = localArr.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    updateLocalStorege(a);\n    setTodos(a);\n  };\n\n  const checkFilter = () => {\n    switch (filter) {\n      case 'all':\n        return todos;\n\n      case 'work':\n        return todos.filter(todo => todo.completed !== true);\n\n      case 'compl':\n        return todos.filter(todo => todo.completed === true);\n\n      default:\n        break;\n    }\n  };\n\n  const removeTodo = id => {\n    let localArr = [...todos];\n    let a = localArr.filter(localArr => localArr.id !== id);\n    setTodos(a);\n    updateLocalStorege(a);\n  };\n\n  const clearAll = () => {\n    localStorage.setItem('key', JSON.stringify([]));\n    setTodos([]);\n  };\n\n  const showeWork = id => {\n    let localArr = pushTodos();\n    setTodos(localArr.filter(todo => todo.completed !== true));\n    setFilter('work');\n  };\n\n  const showeComplited = id => {\n    let localArr = pushTodos();\n    setTodos(localArr.filter(todo => todo.completed === true));\n    setFilter('compl');\n  };\n\n  const showeAll = () => {\n    let localArr = pushTodos();\n    setTodos(localArr);\n    setFilter('all');\n  };\n\n  const addTodo = title => {\n    /*передаю массив который отображается, т.е. перерисованныймассив с фильтрами, и тут его теряю, \n    так как беру для фильтрации данные из локалтореджа, который был перезаписан отфильтрованными значениями. решение: взять ещё 1н локалсторедж для\n    отображения текущего состояния и работать через него или  создать массив объектов, который является копией тодеса и работать с ним на \n    перезапись и т.д. но при этом не тругая локалсторедж.  т.о. локалсторедж будет изменяться при 3х случаях, удалениеэлемента удаление всего и добавление\n    */\n    let b = [];\n    let a = [];\n    console.log('flag 1st click', filter);\n\n    const localCalc = () => {\n      let arrLocal = [...todos];\n      a = arrLocal.concat([{\n        title,\n        id: Date.now(),\n        completed: false\n      }]);\n      setTodos(a);\n    };\n\n    if (filter === 'all') {\n      localCalc();\n      updateLocalStorege(a);\n    } else {\n      b = pushTodos();\n      localCalc();\n      b = [...a];\n      updateLocalStorege(b);\n    }\n  };\n\n  const updateLocalStorege = a => {\n    localStorage.setItem('key', JSON.stringify(a));\n  };\n\n  const pushTodos = () => {\n    let arr = [];\n\n    if (localStorage.length > 0) {\n      let locArr = JSON.parse(localStorage.getItem('key'));\n      arr = [...locArr];\n    }\n\n    return arr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnStates1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"React tutorial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n            onCreate: addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: checkFilter,\n            onToggle: toggleTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnStates\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: clearAll,\n            children: \"remove all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: showeAll,\n            children: \"showe all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: showeWork,\n            children: \"showe in worke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: showeComplited,\n            children: \"showe complited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Jp42ZAvoSkQpFdg6eYQuuKCYx74=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/proj/proj_react/react-youtube/src/App.js"],"names":["React","useEffect","useState","TodoList","Context","AddTodo","App","copTodos","todos","setTodos","filter","setFilter","localStorage","length","locArr","JSON","parse","getItem","arr","toggleTodo","id","localArr","a","map","todo","completed","updateLocalStorege","checkFilter","removeTodo","clearAll","setItem","stringify","showeWork","pushTodos","showeComplited","showeAll","addTodo","title","b","console","log","localCalc","arrLocal","concat","Date","now"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n\n\nconst App = () => { \n  let copTodos= [];\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  copTodos = [...todos];\n  useEffect(() => {\n    if (localStorage.length > 0) {\n      let locArr = JSON.parse(localStorage.getItem('key'));     \n      let arr = [...locArr];\n      setTodos(arr);      \n      }    \n  }, [])\n\n  useEffect(() => {\n    //console.log(todos);\n  }, [todos])\n\n  const toggleTodo = (id) => {  \n\n    let localArr = [...todos]\n    let a = localArr.map( todo => {\n      if (todo.id === id){\n        todo.completed = !todo.completed\n      }      \n    return todo\n    });\n    updateLocalStorege(a); \n    setTodos(a);\n\n  }  \nconst checkFilter = () => {\n    switch (filter){\n      case 'all': \n        return todos;       \n      case 'work': \n        return todos.filter(todo => todo.completed !== true)\n      case 'compl': \n        return todos.filter(todo => todo.completed === true) \n      default:\n        break; \n    }\n\n}\nconst removeTodo = (id) => {  \n  let localArr = [...todos]\n  let a = localArr.filter(localArr => localArr.id !== id)  \n  setTodos(a);\n  updateLocalStorege(a);\n}\n\nconst clearAll= () => {\n  localStorage.setItem('key', JSON.stringify([]));  \n  setTodos([]);\n}\n\nconst showeWork = (id) => { \n  let localArr = pushTodos();\n  setTodos(localArr.filter(todo => todo.completed !== true));\n  setFilter('work');\n}\n\nconst showeComplited = (id) => {\n  let localArr = pushTodos();\n  setTodos(localArr.filter(todo => todo.completed === true));\n  setFilter('compl');\n}\n\nconst showeAll = () => {\n  let localArr = pushTodos();\n  setTodos(localArr);\n  setFilter('all');\n}\n\nconst addTodo = (title) => {/*передаю массив который отображается, т.е. перерисованныймассив с фильтрами, и тут его теряю, \n  так как беру для фильтрации данные из локалтореджа, который был перезаписан отфильтрованными значениями. решение: взять ещё 1н локалсторедж для\n  отображения текущего состояния и работать через него или  создать массив объектов, который является копией тодеса и работать с ним на \n  перезапись и т.д. но при этом не тругая локалсторедж.  т.о. локалсторедж будет изменяться при 3х случаях, удалениеэлемента удаление всего и добавление\n  */\n\n  \n  let b = [];\n  let a = [];\n  console.log('flag 1st click', filter);\n  const localCalc = () => {\n    let arrLocal = [...todos]\n    a = arrLocal.concat([{\n      title,\n      id: Date.now(),\n      completed:false,\n    }]);  \n    setTodos(a);\n  }\n  if (filter==='all') { \n    localCalc();\n    updateLocalStorege(a);\n  } else {\n    b = pushTodos(); \n    localCalc();\n    b = [...a];    \n    updateLocalStorege(b);  \n    }\n}\n\nconst updateLocalStorege = (a) => {     \n  localStorage.setItem('key', JSON.stringify(a));  \n}\n\nconst pushTodos = () => {\n  let arr=[];\n  if (localStorage.length > 0) {\n    let locArr = JSON.parse(localStorage.getItem('key'));     \n    arr = [...locArr];       \n  }\n  return arr; \n}\n\n  return (\n    <React.Fragment>   \n    <Context.Provider value = {{removeTodo}}>\n      <div className='btnStates1'>\n    <div className = 'wrapper'>\n      <h1>React tutorial</h1>\n      <AddTodo onCreate={addTodo}/>\n      {todos.length ? <TodoList todos={checkFilter} onToggle={toggleTodo}/> : <p>no Todo</p>}    \n    </div>\n    <div className = 'btnStates'>  \n     <button type='submit' onClick = {clearAll}>remove all</button> \n     <button type='submit' onClick = {showeAll}>showe all</button> \n     <button type='submit' onClick = {showeWork}>showe in worke</button> \n     <button type='submit' onClick = {showeComplited} >showe complited</button>  \n     </div> \n     </div>    \n    </Context.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
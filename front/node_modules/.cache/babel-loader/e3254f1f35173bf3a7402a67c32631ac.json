{"ast":null,"code":"var _jsxFileName = \"/home/user/django/da/react-y/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\"; //import { bool } from \"prop-types\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/v1/todos/todos/').then(response => response.json()).then(data => {\n      setTodos(checkFilter(data, filter));\n    });\n  }, []);\n  useEffect(() => {\n    setTodos(checkFilter(todos, filter));\n  }, [filter]);\n\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.status = !todo.status;\n      }\n\n      return todo;\n    }));\n  };\n\n  const checkFilter = (data, todoFilter) => {\n    switch (todoFilter) {\n      case 'all':\n        return data;\n\n      case 'work':\n        return data.filter(todo => !todo.status);\n\n      case 'compl':\n        return data.filter(todo => todo.status);\n\n      default:\n        break;\n    }\n  };\n\n  const removeTodo = id => {\n    async function postData(url, data) {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'DELETE',\n        // *GET, POST, PUT, DELETE, etc.  \n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return await response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/', {\n      id\n    }).then(data => {\n      console.log('id', id);\n      console.log(\"otvet \", data);\n    });\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const clearAll = () => {\n    setTodos([]);\n    setFilter('all');\n  };\n\n  const showWork = () => {\n    setTodos(todos.filter(todo => !todo.status));\n    setFilter('work');\n  };\n\n  const showComplited = () => {\n    setTodos(todos.filter(todo => todo.status));\n    setFilter('compl');\n  };\n\n  const showAll = () => {\n    setFilter('all');\n  };\n\n  const addTodo = text => {\n    /**обработку с бека */\n    async function postData(url, data) {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.  \n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return await response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/', {\n      text\n    }).then(data => {\n      console.log('text', text);\n      console.log(\"data1\", data);\n    });\n    setTodos(todos.concat([{\n      id: Date.now(),\n      text,\n      status: false\n    }]));\n    console.log('todos posle addTodo', todos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ToDo List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n            onCreate: addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: todos,\n            onToggle: toggleTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btnPress\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: clearAll,\n            className: \"btnStates\",\n            children: \"remove all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowAll\",\n            type: \"submit\",\n            onClick: showAll,\n            className: `btnStates ${filter === 'all' ? 'gradient-button' : ''}`,\n            children: \"show all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnshowWork\",\n            type: \"submit\",\n            onClick: showWork,\n            className: `btnStates ${filter === 'work' ? 'gradient-button' : ''}`,\n            children: \"show in worke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowComp\",\n            type: \"submit\",\n            onClick: showComplited,\n            className: `btnStates ${filter === 'compl' ? 'gradient-button' : ''}`,\n            children: \"show complited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Jp42ZAvoSkQpFdg6eYQuuKCYx74=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/django/da/react-y/src/App.jsx"],"names":["React","useEffect","useState","TodoList","Context","AddTodo","App","todos","setTodos","filter","setFilter","fetch","then","response","json","data","checkFilter","toggleTodo","id","map","todo","status","todoFilter","removeTodo","postData","url","method","headers","body","JSON","stringify","console","log","clearAll","showWork","showComplited","showAll","addTodo","text","concat","Date","now","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n//import { bool } from \"prop-types\";\n\nconst App = () => { \n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  \n  useEffect(() => {  \n    fetch('http://127.0.0.1:8000/api/v1/todos/todos/')\n    .then(response => response.json())\n    .then((data) => {     \n      setTodos(checkFilter(data, filter));    \n    }) \n  }, []);\n\n  useEffect(() => {\n  setTodos(checkFilter(todos, filter));\n  }, [filter])\n \n  const toggleTodo = (id) => {  \n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.status = !todo.status;\n      }      \n      return todo;\n    }));\n  }  \n\n  const checkFilter = (data, todoFilter) => {\n      switch (todoFilter) {\n        case 'all':  \n          return data;       \n        case 'work': \n          return data.filter(todo => !todo.status);\n        case 'compl': \n          return data.filter(todo => todo.status);\n        default:\n          break; \n      }\n  }\n\n  const removeTodo = (id) => {  \n    async function postData(url, data) {\n      // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'DELETE', // *GET, POST, PUT, DELETE, etc.  \n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',      \n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return await response.json(); // parses JSON response into native JavaScript objects\n    }   \n      postData('http://127.0.0.1:8000/api/v1/todos/todos/', {id})\n      .then((data) => {\n        console.log('id', id)\n        console.log(\"otvet \", data); \n        });\n\n    setTodos(todos.filter(todo => todo.id !== id));  \n  }\n\n  const clearAll = () => {\n    setTodos([]);\n    setFilter('all');\n  }\n\n  const showWork = () => {    \n    setTodos(todos.filter(todo => !todo.status));\n    setFilter('work');\n  }\n\n  const showComplited = () => {    \n    setTodos(todos.filter(todo => todo.status));\n    setFilter('compl');\n  }\n\n  const showAll = () => {    \n    setFilter('all');\n  }\n\n  const addTodo = (text) => { \n\n    /**обработку с бека */\n    async function postData(url, data) {\n      // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.  \n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      \n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return await response.json(); // parses JSON response into native JavaScript objects\n    }   \n      postData('http://127.0.0.1:8000/api/v1/todos/todos/', {text})\n      .then((data) => {\n        console.log('text', text)\n        console.log(\"data1\", data); \n        });\n          \n    setTodos(todos.concat([{              \n      id: Date.now(),\n      text,\n      status: false,\n    }]));\n    console.log('todos posle addTodo',todos)\n  }\n \n  return (    \n    <>   \n      <Context.Provider value = {{removeTodo}}>\n      <div>        \n          <div className = 'wrapper'>\n            <h1>ToDo List</h1>\n            <AddTodo onCreate = {addTodo}/>\n            {todos.length ? <TodoList todos = {todos} onToggle = {toggleTodo}/> : <p>no Todo</p>}    \n          </div>          \n        <div id ='btnPress'> \n          <button  type='submit' onClick = {clearAll} className = 'btnStates'>remove all</button>           \n          <button id = 'btnShowAll' type='submit' onClick = {showAll} className = {`btnStates ${filter === 'all' ? 'gradient-button' : ''}`}>show all</button> \n          <button id = 'btnshowWork' type='submit' onClick = {showWork} className = {`btnStates ${filter === 'work' ? 'gradient-button' : ''}`}>show in worke</button> \n          <button id = 'btnShowComp' type='submit' onClick = {showComplited} className = {`btnStates ${filter === 'compl' ? 'gradient-button' : ''}`}>show complited</button>  \n        </div> \n        </div>   \n      </Context.Provider>\n    </>\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
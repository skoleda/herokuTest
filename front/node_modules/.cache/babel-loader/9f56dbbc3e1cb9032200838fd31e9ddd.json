{"ast":null,"code":"var _jsxFileName = \"/home/user/django/da/react-y/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\"; //import { bool } from \"prop-types\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/v1/todos/todos/').then(response => response.json()).then(data => {\n      console.log(data);\n      setTodos(data);\n      console.log(todos);\n    });\n  }, []);\n  useEffect(() => {\n    setTodosOnDB();\n    setTodos(checkFilter(todos, filter));\n  }, [filter]); // useEffect(() => {\n  //   if (todos.status){\n  //   postData('http://127.0.0.1:8000/api/v1/todos/todos/'+todos.id+'/', 'PUT', {todos}); \n  //   console.log(todos.status) \n  //   console.log(todos.id) \n  //   }\n  //   console.log(todos.status) \n  //   console.log(todos.id) \n  // }, [todos.status])\n\n  /**общие: не работает обновление дб, не работает вывод по группам после первого раза, юз эффект на событие \n   смены фильтра работает лишь 1н раз, первый. решение, пикрутить к каждому вызову отрисовку из ДБ так как меняется тудус после фильтров, ДБ при этом неизменна\n   как отлавливать в реалтайме изменения - хз, надо глянут чистый реакт. что ещё не работает? разобраться как работает апдейт, и почему он не работает. \n   хорошо работает вывод всех результатов. аппдейт на локальный чейндж привязать (чуть ниже)\n   */\n\n  const toggleTodo = id => {\n    /***тут прикрутить апдейт к ДБ */\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.status = !todo.status;\n        postData('http://127.0.0.1:8000/api/v1/todos/todos/' + todo.id + '/', 'PUT', todo);\n      }\n\n      return todo;\n    }));\n  };\n\n  const checkFilter = (data, todoFilter) => {\n    console.log('filter', filter);\n\n    switch (todoFilter) {\n      case 'all':\n        return data;\n\n      case 'work':\n        return data.filter(todo => !todo.status);\n\n      case 'compl':\n        return data.filter(todo => todo.status);\n\n      default:\n        break;\n    }\n  };\n\n  const removeTodo = id => {\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/' + id + '/', 'DELETE', {\n      id\n    });\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const clearAll = () => {\n    todos.forEach(e => {\n      removeTodo(e.id);\n    });\n    setTodos([]);\n    setFilter('all');\n  };\n\n  const showWork = () => {\n    setFilter('work'); //setTodos(todos.filter(todo => !todo.status));\n  };\n\n  const showComplited = () => {\n    setFilter('compl'); // setTodosOnDB();\n    //setTodos(todos.filter(todo => todo.status));   \n  };\n\n  const showAll = () => {\n    console.log('tut');\n    setFilter('all'); // setTodosOnDB();    \n  };\n\n  const addTodo = text => {\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/', 'POST', {\n      text\n    }).then(data => {\n      setTodos(todos.concat([{\n        id: data.id,\n        text,\n        status: false\n      }]));\n    });\n  };\n\n  async function postData(url, meth, data) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: meth,\n      // *GET, POST, PUT, DELETE, etc.  \n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(data),\n      // body data type must match \"Content-Type\" header\n      dataType: 'json'\n    });\n    if (meth !== 'DELETE' && meth !== 'PUT') return await response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  const setTodosOnDB = () => {\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/', 'GET').then(data => {\n      setTodos(ata);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ToDo List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n            onCreate: addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: todos,\n            onToggle: toggleTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btnPress\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: clearAll,\n            className: \"btnStates\",\n            children: \"remove all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowAll\",\n            type: \"submit\",\n            onClick: showAll,\n            className: `btnStates ${filter === 'all' ? 'gradient-button' : ''}`,\n            children: \"show all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnshowWork\",\n            type: \"submit\",\n            onClick: showWork,\n            className: `btnStates ${filter === 'work' ? 'gradient-button' : ''}`,\n            children: \"show in worke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowComp\",\n            type: \"submit\",\n            onClick: showComplited,\n            className: `btnStates ${filter === 'compl' ? 'gradient-button' : ''}`,\n            children: \"show complited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Jp42ZAvoSkQpFdg6eYQuuKCYx74=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/django/da/react-y/src/App.jsx"],"names":["React","useEffect","useState","TodoList","Context","AddTodo","App","todos","setTodos","filter","setFilter","fetch","then","response","json","data","console","log","setTodosOnDB","checkFilter","toggleTodo","id","map","todo","status","postData","todoFilter","removeTodo","clearAll","forEach","e","showWork","showComplited","showAll","addTodo","text","concat","url","meth","method","headers","body","JSON","stringify","dataType","ata","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n//import { bool } from \"prop-types\";\n\nconst App = () => { \n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  \n  useEffect(() => {  \n    fetch('http://127.0.0.1:8000/api/v1/todos/todos/')\n    .then(response => response.json())\n    .then((data) => {    \n      console.log(data) \n      setTodos(data);\n      console.log(todos) \n      })     \n  }, []);\n\n  useEffect(() => {\n    setTodosOnDB();\n    setTodos(checkFilter(todos, filter));\n    \n  }, [filter])\n\n  // useEffect(() => {\n  //   if (todos.status){\n  //   postData('http://127.0.0.1:8000/api/v1/todos/todos/'+todos.id+'/', 'PUT', {todos}); \n  //   console.log(todos.status) \n  //   console.log(todos.id) \n  //   }\n  //   console.log(todos.status) \n  //   console.log(todos.id) \n  // }, [todos.status])\n/**общие: не работает обновление дб, не работает вывод по группам после первого раза, юз эффект на событие \n смены фильтра работает лишь 1н раз, первый. решение, пикрутить к каждому вызову отрисовку из ДБ так как меняется тудус после фильтров, ДБ при этом неизменна\n как отлавливать в реалтайме изменения - хз, надо глянут чистый реакт. что ещё не работает? разобраться как работает апдейт, и почему он не работает. \n хорошо работает вывод всех результатов. аппдейт на локальный чейндж привязать (чуть ниже)\n */\n  const toggleTodo = (id) => {  \n    \n     /***тут прикрутить апдейт к ДБ */\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {        \n        todo.status = !todo.status;\n        postData('http://127.0.0.1:8000/api/v1/todos/todos/'+todo.id+'/', 'PUT',todo);\n      }            \n      return todo;\n    }));\n  }  \n\n  const checkFilter = (data, todoFilter) => {\n    console.log('filter', filter)\n      switch (todoFilter) {\n        case 'all':  \n          return data;       \n        case 'work': \n          return data.filter(todo => !todo.status);\n        case 'compl':          \n          return data.filter(todo => todo.status);\n        default:\n          break; \n      }\n  }\n\n  const removeTodo = (id) => {     \n    postData('http://127.0.0.1:8000/api/v1/todos/todos/'+id+'/', 'DELETE', {id}); \n    setTodos(todos.filter(todo => todo.id !== id));  \n  }\n\n  const clearAll = () => {             \n    todos.forEach(e => {\n      removeTodo(e.id)        \n    })\n    setTodos([]);\n    setFilter('all');\n  }\n\n  const showWork = () => {  \n    setFilter('work');  \n    \n    //setTodos(todos.filter(todo => !todo.status));\n   \n  }\n\n  const showComplited = () => {  \n    setFilter('compl');  \n   // setTodosOnDB();\n    //setTodos(todos.filter(todo => todo.status));   \n  }\n\n  const showAll = () => { \n    console.log('tut', )\n    setFilter('all');\n   // setTodosOnDB();    \n  }\n\n  const addTodo = (text) => {\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/', 'POST', {text})\n    .then((data) => {\n      setTodos(todos.concat([{              \n        id:data.id,\n        text,\n        status: false,\n      }]));\n    });      \n  }\n\n  async function postData(url, meth, data ) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: meth, // *GET, POST, PUT, DELETE, etc.  \n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',      \n    },\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    dataType: 'json',\n    });\n    if (meth !== 'DELETE' && meth !== 'PUT')\n      return await response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  const setTodosOnDB = () => {\n    postData('http://127.0.0.1:8000/api/v1/todos/todos/','GET')\n    .then((data) => {setTodos(ata,);})\n  }\n \n  return (    \n    <>   \n      <Context.Provider value = {{removeTodo}}>\n      <div>        \n          <div className = 'wrapper'>\n            <h1>ToDo List</h1>\n            <AddTodo onCreate = {addTodo}/>\n            {todos.length ? <TodoList todos = {todos} onToggle = {toggleTodo}/> : <p>no Todo</p>}    \n          </div>          \n        <div id ='btnPress'> \n          <button  type='submit' onClick = {clearAll} className = 'btnStates'>remove all</button>           \n          <button id = 'btnShowAll' type='submit' onClick = {showAll} className = {`btnStates ${filter === 'all' ? 'gradient-button' : ''}`}>show all</button> \n          <button id = 'btnshowWork' type='submit' onClick = {showWork} className = {`btnStates ${filter === 'work' ? 'gradient-button' : ''}`}>show in worke</button> \n          <button id = 'btnShowComp' type='submit' onClick = {showComplited} className = {`btnStates ${filter === 'compl' ? 'gradient-button' : ''}`}>show complited</button>  \n        </div> \n        </div>   \n      </Context.Provider>\n    </>\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
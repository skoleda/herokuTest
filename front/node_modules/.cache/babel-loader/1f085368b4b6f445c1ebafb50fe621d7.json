{"ast":null,"code":"var _jsxFileName = \"/home/user/proj/proj_react/react-youtube/src/Todo/AddTodo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useInputeValue(defaulteValue = '') {\n  _s();\n\n  const [value, setValue] = useState(defaulteValue);\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  };\n}\n\n_s(useInputeValue, \"J9wUVoXbNZbWRDUAgt6tt1Zl5NE=\");\n\nfunction AddTodo({\n  onCreate\n}) {\n  _s2();\n\n  const input = useInputeValue('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (input.value.trim()) {\n      onCreate(input.value()); //   setValue('')\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AddTodo, \"ilw/2dew9jXsPCvHpif3gydfg2Q=\", false, function () {\n  return [useInputeValue];\n});\n\n_c = AddTodo;\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/user/proj/proj_react/react-youtube/src/Todo/AddTodo.js"],"names":["React","useState","PropTypes","useInputeValue","defaulteValue","value","setValue","bind","onChange","event","target","clear","AddTodo","onCreate","input","submitHandler","preventDefault","trim","marginBottom","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,cAAT,CAAwBC,aAAa,GAAG,EAAxC,EAA4C;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,aAAD,CAAlC;AAEA,SAAO;AACHG,IAAAA,IAAI,EAAC;AACDF,MAAAA,KADC;AAEDG,MAAAA,QAAQ,EAAEC,KAAK,IAAEH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd;AAFxB,KADF;AAKHM,IAAAA,KAAK,EAAC,MAAKL,QAAQ,CAAC,EAAD,CALhB;AAMHD,IAAAA,KAAK,EAAC,MAAIA;AANP,GAAP;AAQH;;GAXQF,c;;AAaT,SAASS,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AAAA;;AACxB,QAAMC,KAAK,GAAGX,cAAc,CAAC,EAAD,CAA5B;;AAEA,WAASY,aAAT,CAAuBN,KAAvB,EAA8B;AAC1BA,IAAAA,KAAK,CAACO,cAAN;;AAEA,QAAIF,KAAK,CAACT,KAAN,CAAYY,IAAZ,EAAJ,EAAwB;AACpBJ,MAAAA,QAAQ,CAACC,KAAK,CAACT,KAAN,EAAD,CAAR,CADoB,CAEvB;AACA;AACJ;;AAED,sBACI;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,YAAY,EAAE;AAAf,KAAb;AAAqC,IAAA,QAAQ,EAAEH,aAA/C;AAAA,4BACI,sBAAWD,KAAK,CAACP;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;IArBQK,O;UACST,c;;;KADTS,O;AAuBTA,OAAO,CAACO,SAAR,GAAoB;AAChBN,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,IAAV,CAAeC;AADT,CAApB;AAIA,eAAeT,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction useInputeValue(defaulteValue = '') {\n    const [value, setValue] = useState(defaulteValue)\n\n    return {\n        bind:{\n            value,\n            onChange: event=>setValue(event.target.value)\n        },\n        clear:()=> setValue(''),\n        value:()=>value,\n    }\n}\n\nfunction AddTodo({onCreate}){\n    const input = useInputeValue('')\n\n    function submitHandler(event) {\n        event.preventDefault()\n\n        if (input.value.trim()) {\n            onCreate(input.value())\n         //   setValue('')\n        }\n    }\n\n    return (\n        <form style={{marginBottom: '1rem'}} onSubmit={submitHandler}>\n            <input {...input.bind}/>\n            <button type='submit'>Add Todo</button>\n            \n        </form>\n    )\n\n\n}\n\nAddTodo.propTypes = {\n    onCreate: PropTypes.func.isRequired\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}
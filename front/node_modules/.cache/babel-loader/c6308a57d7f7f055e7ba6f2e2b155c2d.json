{"ast":null,"code":"var _jsxFileName = \"/home/user/django/da/react-y/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\"; //import { bool } from \"prop-types\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  let ass = []; // useEffect(() => {  \n  //   setTodosFromDB(); \n  //   console.log('start app')          \n  // }, []);\n\n  useEffect(() => {\n    setTodosFromDB(function () {\n      console.log('work=3');\n    });\n  }, [filter]); // useEffect(() => {\n  //   setTodos(checkFilter(ass, filter))         \n  // }, [ass]) \n\n  /**общие: не работает обновление дб, не работает вывод по группам после первого раза, юз эффект на событие \n   смены фильтра работает лишь 1н раз, первый. решение, пикрутить к каждому вызову отрисовку из ДБ так как меняется тудус после фильтров, ДБ при этом неизменна\n   как отлавливать в реалтайме изменения - хз, надо глянут чистый реакт. что ещё не работает? разобраться как работает апдейт, и почему он не работает. \n   хорошо работает вывод всех результатов. аппдейт на локальный чейндж привязать (чуть ниже)\n   */\n\n  const toggleTodo = id => {\n    //console.log('todos', todos) \n    todos.forEach(todo => {\n      if (todo.id === id) {\n        todo.status = !todo.status;\n        workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/' + todo.id + '/', 'PUT', todo);\n      }\n    });\n    setTodosFromDB(function () {\n      setTodos(checkFilter(todos, filter));\n      console.log('todos', todos);\n    }); // console.log('todos befor', todos)    \n  };\n\n  const checkFilter = (data, todoFilter) => {\n    console.log('filter', filter);\n\n    switch (todoFilter) {\n      case 'all':\n        return data;\n\n      case 'work':\n        return data.filter(todo => !todo.status);\n\n      case 'compl':\n        return data.filter(todo => todo.status);\n\n      default:\n        break;\n    }\n  };\n\n  const removeTodo = id => {\n    workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/' + id + '/', 'DELETE', {\n      id\n    });\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const clearAll = () => {\n    todos.forEach(e => {\n      removeTodo(e.id);\n    });\n    setTodos([]);\n    setFilter('all');\n  };\n\n  const showWork = () => {\n    setFilter('work');\n  };\n\n  const showComplited = () => {\n    setFilter('compl');\n  };\n\n  const showAll = () => {\n    setFilter('all');\n  };\n\n  const addTodo = text => {\n    workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/', 'POST', {\n      text\n    }).then(data => {\n      setTodos(todos.concat([{\n        id: data.id,\n        text,\n        status: false\n      }]));\n    });\n  };\n\n  async function workWithDB(url, meth, data) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: meth,\n      // *GET, POST, PUT, DELETE, etc.  \n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(data),\n      // body data type must match \"Content-Type\" header\n      dataType: 'json'\n    });\n    if (meth !== 'DELETE' && meth !== 'PUT') return await response.json(); // parses JSON response into native JavaScript objects\n  } // const setTodosFromDB = () => {\n  //   let ass = []\n  //   function callb (data, callback) {\n  //     console.log('inn callb', data )   \n  //     callback(todos)  \n  //     setTodos(checkFilter(data, filter)) \n  //   }\n  //   console.log('setTodosFromDB', todos);\n  //   setTodos(checkFilter(todos, filter))\n  //   workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/','GET')\n  //   .then((data) => { \n  //     callb (data, function () { \n  //       //setTodos(checkFilter(data, filter))       \n  //       console.log('setTodosFromDB befor', data);\n  //       console.log('setTodosFromDB setTodos befor', todos);\n  //       ass = [...todos]; \n  //       console.log('ass', ass )   \n  //     }) \n  //   })\n  // }\n\n\n  function setTodosFromDB(callback) {\n    callback(workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/', 'GET').then(data => {\n      setTodos(checkFilter(data, filter));\n    }));\n  } // function test () {\n  //   function testcall(data, callback) {\n  //     callback(setTodos(checkFilter(data, filter)))\n  //   }\n  //   testcall(data, function () {\n  //     console.log('setTodosFromDB befor', data);\n  //     console.log('setTodosFromDB setTodos befor', todos);\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ToDo List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n            onCreate: addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: todos,\n            onToggle: toggleTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btnPress\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: clearAll,\n            className: \"btnStates\",\n            children: \"remove all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowAll\",\n            type: \"submit\",\n            onClick: showAll,\n            className: `btnStates ${filter === 'all' ? 'gradient-button' : ''}`,\n            children: \"show all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnshowWork\",\n            type: \"submit\",\n            onClick: showWork,\n            className: `btnStates ${filter === 'work' ? 'gradient-button' : ''}`,\n            children: \"show in worke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btnShowComp\",\n            type: \"submit\",\n            onClick: showComplited,\n            className: `btnStates ${filter === 'compl' ? 'gradient-button' : ''}`,\n            children: \"show complited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"dN/FtGOoCXRuvpfmxkdg32mLihw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/django/da/react-y/src/App.jsx"],"names":["React","useEffect","useState","TodoList","Context","AddTodo","App","todos","setTodos","filter","setFilter","ass","setTodosFromDB","console","log","toggleTodo","id","forEach","todo","status","workWithDB","checkFilter","data","todoFilter","removeTodo","clearAll","e","showWork","showComplited","showAll","addTodo","text","then","concat","url","meth","response","fetch","method","headers","body","JSON","stringify","dataType","json","callback","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n//import { bool } from \"prop-types\";\n\nconst App = () => { \n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  let ass = []\n  // useEffect(() => {  \n  //   setTodosFromDB(); \n  //   console.log('start app')          \n  // }, []);\n\n  useEffect(() => {\n    setTodosFromDB(function () {\n      console.log('work=3');\n  });        \n  }, [filter])\n\n\n  // useEffect(() => {\n  //   setTodos(checkFilter(ass, filter))         \n  // }, [ass]) \n \n\n\n \n/**общие: не работает обновление дб, не работает вывод по группам после первого раза, юз эффект на событие \n смены фильтра работает лишь 1н раз, первый. решение, пикрутить к каждому вызову отрисовку из ДБ так как меняется тудус после фильтров, ДБ при этом неизменна\n как отлавливать в реалтайме изменения - хз, надо глянут чистый реакт. что ещё не работает? разобраться как работает апдейт, и почему он не работает. \n хорошо работает вывод всех результатов. аппдейт на локальный чейндж привязать (чуть ниже)\n */\n  const toggleTodo = (id) => { \n\n    //console.log('todos', todos) \n\n    todos.forEach(todo => {      \n      if (todo.id === id) {        \n        todo.status = !todo.status;\n        workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/'+todo.id+'/', 'PUT',todo);\n      }       \n    });       \n    setTodosFromDB(function () {\n      setTodos(checkFilter(todos, filter))\n       \n      console.log('todos',todos);\n    });\n    \n   // console.log('todos befor', todos)    \n\n  }  \n\n  const checkFilter = (data, todoFilter) => {\n    console.log('filter', filter)\n      switch (todoFilter) {\n        case 'all':  \n          return data;       \n        case 'work': \n          return data.filter(todo => !todo.status);\n        case 'compl':          \n          return data.filter(todo => todo.status);\n        default:\n          break; \n      }\n  }\n\n  const removeTodo = (id) => {     \n    workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/'+id+'/', 'DELETE', {id}); \n    setTodos(todos.filter(todo => todo.id !== id));  \n  }\n\n  const clearAll = () => {             \n    todos.forEach(e => {\n      removeTodo(e.id)        \n    })\n    setTodos([]);\n    setFilter('all');\n  }\n\n  const showWork = () => {  \n    setFilter('work');  \n  }\n\n  const showComplited = () => {  \n    setFilter('compl');   \n  }\n\n  const showAll = () => {     \n    setFilter('all');      \n  }\n\n  const addTodo = (text) => {\n    workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/', 'POST', {text})\n    .then((data) => {\n      setTodos(todos.concat([{              \n        id:data.id,\n        text,\n        status: false,\n      }]));\n    });      \n  }\n\n  async function workWithDB(url, meth, data ) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: meth, // *GET, POST, PUT, DELETE, etc.  \n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',      \n    },\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    dataType: 'json',\n    });\n    if (meth !== 'DELETE' && meth !== 'PUT')\n      return await response.json(); // parses JSON response into native JavaScript objects\n  }\n\n\n  // const setTodosFromDB = () => {\n  //   let ass = []\n  //   function callb (data, callback) {\n  //     console.log('inn callb', data )   \n\n  //     callback(todos)  \n\n  //     setTodos(checkFilter(data, filter)) \n      \n  //   }\n  //   console.log('setTodosFromDB', todos);\n  //   setTodos(checkFilter(todos, filter))\n  //   workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/','GET')\n  //   .then((data) => { \n  //     callb (data, function () { \n  //       //setTodos(checkFilter(data, filter))       \n  //       console.log('setTodosFromDB befor', data);\n  //       console.log('setTodosFromDB setTodos befor', todos);\n\n  //       ass = [...todos]; \n\n  //       console.log('ass', ass )   \n  //     }) \n  //   })\n    \n  // }\n\n  function setTodosFromDB (callback) {   \n    callback(workWithDB('http://127.0.0.1:8000/api/v1/todos/todos/','GET')\n    .then((data) => { \n      setTodos(checkFilter(data, filter))\n    })\n       ) \n  }\n  \n  // function test () {\n  //   function testcall(data, callback) {\n  //     callback(setTodos(checkFilter(data, filter)))\n\n\n  //   }\n  //   testcall(data, function () {\n  //     console.log('setTodosFromDB befor', data);\n  //     console.log('setTodosFromDB setTodos befor', todos);\n  //   })\n\n  // }\n \n  return (    \n    <>   \n      <Context.Provider value = {{removeTodo}}>\n      <div>        \n          <div className = 'wrapper'>\n            <h1>ToDo List</h1>\n            <AddTodo onCreate = {addTodo}/>\n            {todos.length ? <TodoList todos = {todos} onToggle = {toggleTodo}/> : <p>no Todo</p>}    \n          </div>          \n        <div id ='btnPress'> \n          <button  type='submit' onClick = {clearAll} className = 'btnStates'>remove all</button>           \n          <button id = 'btnShowAll' type='submit' onClick = {showAll} className = {`btnStates ${filter === 'all' ? 'gradient-button' : ''}`}>show all</button> \n          <button id = 'btnshowWork' type='submit' onClick = {showWork} className = {`btnStates ${filter === 'work' ? 'gradient-button' : ''}`}>show in worke</button> \n          <button id = 'btnShowComp' type='submit' onClick = {showComplited} className = {`btnStates ${filter === 'compl' ? 'gradient-button' : ''}`}>show complited</button>  \n        </div> \n        </div>   \n      </Context.Provider>\n    </>\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/django/djangoToDo/front/src/Todo/AddTodo.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useInputeValue = (defaulteValue = '') => {\n  _s();\n\n  const [value, setValue] = useState(defaulteValue);\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  };\n};\n\n_s(useInputeValue, \"J9wUVoXbNZbWRDUAgt6tt1Zl5NE=\");\n\nconst AddTodo = ({\n  onCreate\n}) => {\n  _s2();\n\n  const input = useInputeValue('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (input.value().trim()) {\n      onCreate(input.value());\n      input.clear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        ...input.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btnStates\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddTodo, \"ilw/2dew9jXsPCvHpif3gydfg2Q=\", false, function () {\n  return [useInputeValue];\n});\n\n_c = AddTodo;\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/user/django/djangoToDo/front/src/Todo/AddTodo.jsx"],"names":["React","useState","PropTypes","useInputeValue","defaulteValue","value","setValue","bind","onChange","event","target","clear","AddTodo","onCreate","input","submitHandler","preventDefault","trim","marginBottom","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAG,CAACC,aAAa,GAAG,EAAjB,KAAwB;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,aAAD,CAAlC;AAEA,SAAO;AACHG,IAAAA,IAAI,EAAE;AACFF,MAAAA,KADE;AAEFG,MAAAA,QAAQ,EAAEC,KAAK,IAAIH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd;AAFzB,KADH;AAKHM,IAAAA,KAAK,EAAE,MAAML,QAAQ,CAAC,EAAD,CALlB;AAMHD,IAAAA,KAAK,EAAE,MAAMA;AANV,GAAP;AAQH,CAXD;;GAAMF,c;;AAaN,MAAMS,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC5B,QAAMC,KAAK,GAAGX,cAAc,CAAC,EAAD,CAA5B;;AAEA,QAAMY,aAAa,GAAIN,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACO,cAAN;;AACA,QAAIF,KAAK,CAACT,KAAN,GAAcY,IAAd,EAAJ,EAA0B;AACtBJ,MAAAA,QAAQ,CAACC,KAAK,CAACT,KAAN,EAAD,CAAR;AACAS,MAAAA,KAAK,CAACH,KAAN;AACH;AACJ,GAND;;AAQA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAM,MAAA,KAAK,EAAI;AAACO,QAAAA,YAAY,EAAE;AAAf,OAAf;AAAuC,MAAA,QAAQ,EAAEH,aAAjD;AAAA,8BACI;AAAO,QAAA,SAAS,EAAG,OAAnB;AAAA,WAA8BD,KAAK,CAACP;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,SAAS,EAAG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApBD;;IAAMK,O;UACYT,c;;;KADZS,O;AAsBNA,OAAO,CAACO,SAAR,GAAoB;AAChBN,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,IAAV,CAAeC;AADT,CAApB;AAIA,eAAeT,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst useInputeValue = (defaulteValue = '') => {\n    const [value, setValue] = useState(defaulteValue);\n\n    return {\n        bind: {\n            value,\n            onChange: event => setValue(event.target.value)\n        },\n        clear: () => setValue(''),\n        value: () => value,\n    }\n}\n\nconst AddTodo = ({onCreate}) => {\n    const input = useInputeValue('')\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        if (input.value().trim()) {\n            onCreate(input.value())\n            input.clear()\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <form style = {{marginBottom: '1rem'}} onSubmit={submitHandler}>\n                <input className = 'input'{...input.bind}/>\n                <button type = 'submit' className = 'btnStates'>Add Todo</button>     \n            </form>            \n        </React.Fragment>\n                      \n    )\n}\n\nAddTodo.propTypes = {\n    onCreate: PropTypes.func.isRequired\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}